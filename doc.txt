JWT , APi with JWT for Authentication in Node.js
-start project
-download dependencies
    -bcryptjs (use to hash and compare password by use bcrypt hashing algorithm)
        -random salt (random number and mix in password before hashing)
        -cost factor = 10 -> measure how many rounds of processing algorithm working
    -dotenv (use for stored data in .env file to another file want to fetch)
    -express
    -jsonwebtoken
    -mongoose
    -nodemon (dev dependencies)
-create nodejs server and connect database
    -connect with database uri -> go to find uri in clound mongodb
    -create could mongodb -> connect with uri (dot forget add password)
-create user model and route
    -create schema = logic structure and design of database (ex table structure, relationship, security, etc)
        -mean the way to organize and control data within the database
-create route for register and login
-install postman -> for test API req/res
    -or thunder client
-make http request and add body data with json
-create middleware for Authentication
    -when auth pass show message

What is JWT and Why Should You Use JWT
-JWT
    -JWT is Authorization not Authentication ***
        -Authentication = username, password
        -Authorization = check is the same user request (that login already), and role that user (login already) can do
    -normally we use session ID for Authorization send it to cookies of the browser
        -JWT use JSON web token instead sessionID to do Authorization
-How JWT generate token
    -component of token
        -check token with hash the signature path (encrypt header + encrypt payload + secret_key) -> hash value (digest) it's gonna be match 100% from token that come -> mean no one edit it
-Use case
    -login in one sever -> allow to access another server (that relate and permit the first server) and it's will be still safe (both of server know secret_key)

User Authentication - Password Login
-start project
    -install dependencies express bcrypt
-create server.js with express
-install extension REST Client -> working with file 'request.rest'
-POST user, password
-use bcryptjs to hashing necessary data for prevent
    -create salt -> hash password
-create login route
-POST login route
    -use bcrypt compare

JWT Authentication Tutorial
-start project
    -install dependencies (express jsonwebtoken dotenv)
        -save-dev nodemon
-create server with express
-use extension REST Client -> working with file.rest
    -use JWT for not let everyone access POST API unless user login
-authentication our request -> use JWT
-app.use(express.json()) ** make app use json from the body that get pass to inside request
-generate secret key with node->crypto lib->randomBytes(64)toString(hex)
    -for token and refresh token
-create middleware for authentication token
-create refresh token -> for more secure and remove token when logout  (for cant use refresh token anymore)
    -create auth server for work separately